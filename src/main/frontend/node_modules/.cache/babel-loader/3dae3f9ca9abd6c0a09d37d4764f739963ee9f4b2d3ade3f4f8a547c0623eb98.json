{"ast":null,"code":"var _jsxFileName = \"/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreateIdPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IdInputForm() {\n  _s();\n  console.log(process.env.REACT_APP_API_URL);\n  const {\n    id,\n    setId\n  } = useContext(SignUpContext);\n  const [idError, setIdError] = useState('');\n  const [idMessage, setIdMessage] = useState('');\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false); // 아이디 중복 검사를 했는지 안했는지\n  const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n\n  const idInputRef = useRef();\n  const navigate = useNavigate();\n  const onChangeIdHandler = e => {\n    const idValue = e.target.value;\n\n    // id 유효성 검사\n    idCheckHandler(idValue);\n  };\n  const idCheckHandler = async id => {\n    const idRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{5,15}$/;\n    if (id === '') {\n      setIdError('아이디를 입력해주세요.');\n      setIsIdAvailable(false);\n      return false;\n    } else if (!idRegex.test(id)) {\n      setIdError('아이디는 5~15자의 영소문자, 숫자만 입력 가능합니다.');\n      setIsIdAvailable(false);\n      return false;\n    }\n    try {\n      idDuplicationCheck(id); // 아이디 중복 검사\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.data && error.response.data.message) {\n        setIdError(error.response.data.message);\n      } else {\n        setIdError('서버 오류입니다. 관리자에게 문의하세요.');\n      }\n      return false;\n    }\n  };\n  const idDuplicationCheck = async userId => {\n    await axios.post(\"http://localhost:9000/users/check-duplication/userId\", {\n      userId: userId\n    }).then(response => {\n      var _response$data;\n      console.log(response);\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.isDuplicated) == null || response.data.message == null) {\n        setIdError(\"잘못된 요청입니다.\");\n        return;\n      }\n      setIsIdAvailable(!response.data.isDuplicated);\n      setIdMessage(response.data.message);\n    }).catch(function (error) {\n      console.log(error);\n      setIdError(\"요청 처리 중 오류가 발생했습니다. 다시 시도해주세요.\");\n    });\n  };\n  const DisplayMessage = ({\n    idError,\n    idMessage\n  }) => {\n    // message or error 출력\n    if (idError) {\n      return /*#__PURE__*/_jsxDEV(Style.ErrorMessage, {\n        children: idError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else if (idMessage) {\n      return /*#__PURE__*/_jsxDEV(Style.Message, {\n        children: idMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const id = idInputRef.current.value;\n    setId(id);\n    console.log(id);\n\n    // history.push()를 사용하여 원하는 URL로 라우팅합니다.\n    navigate('/signUp/password');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Style.Instruction, {\n      children: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.InputField, {\n      ref: idInputRef,\n      onChange: onChangeIdHandler,\n      type: \"text\",\n      id: \"id\",\n      name: \"id\",\n      value: id,\n      placeholder: \"\\uC544\\uC774\\uB514 \\uC785\\uB825\",\n      theme: \"underLine\",\n      maxLength: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DisplayMessage, {\n      idError: idError,\n      idMessage: idMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.StepInfo, {\n      children: \"1 of 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.ProgressSection, {\n      children: /*#__PURE__*/_jsxDEV(Style.ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(Style.NextButton, {\n        disabled: isIdAvailable,\n        type: \"submit\",\n        children: \" \\uB2E4\\uC74C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.FooterIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(IdInputForm, \"1PuuWPm7KPw9W8wyDQPyIADw/eI=\", false, function () {\n  return [useNavigate];\n});\n_c = IdInputForm;\nexport default IdInputForm;\nvar _c;\n$RefreshReg$(_c, \"IdInputForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","Style","Link","SignUpContext","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","IdInputForm","_s","console","log","process","env","REACT_APP_API_URL","id","setId","idError","setIdError","idMessage","setIdMessage","isIdDuplicated","setIsIdDuplicated","isIdAvailable","setIsIdAvailable","idInputRef","navigate","onChangeIdHandler","e","idValue","target","value","idCheckHandler","idRegex","test","idDuplicationCheck","error","response","data","message","userId","post","then","_response$data","isDuplicated","catch","DisplayMessage","ErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","Message","onFormSubmit","event","preventDefault","current","Instruction","InputField","ref","onChange","type","name","placeholder","theme","maxLength","StepInfo","ProgressSection","ProgressBar","onSubmit","NextButton","disabled","FooterIndicator","_c","$RefreshReg$"],"sources":["/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreateIdPage.js"],"sourcesContent":["import React, { useState , useEffect , useContext , useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction IdInputForm() {\n  console.log(process.env.REACT_APP_API_URL);\n\n  const {id, setId} = useContext(SignUpContext);\n\n  const [idError, setIdError] = useState('');\n  const [idMessage, setIdMessage] = useState('');\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false); // 아이디 중복 검사를 했는지 안했는지\n  const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n\n  const idInputRef = useRef();\n  const navigate = useNavigate();\n\n\n  const onChangeIdHandler = (e) => {\n    const idValue = e.target.value;\n\n    // id 유효성 검사\n    idCheckHandler(idValue);\n  }\n\n  const idCheckHandler = async (id) => {\n    const idRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{5,15}$/;\n\n    if (id === '') {\n      setIdError('아이디를 입력해주세요.');\n      setIsIdAvailable(false);\n      return false;\n\n    } else if (!idRegex.test(id)) {\n      setIdError('아이디는 5~15자의 영소문자, 숫자만 입력 가능합니다.');\n      setIsIdAvailable(false);\n      return false;\n    }\n\n    try {\n      idDuplicationCheck(id); // 아이디 중복 검사\n\n    } catch (error) {\n     console.error(error);\n       if (error.response && error.response.data && error.response.data.message) {\n         setIdError(error.response.data.message);\n       } else {\n         setIdError('서버 오류입니다. 관리자에게 문의하세요.');\n       }\n       return false;\n    }\n  }\n\n  const idDuplicationCheck = async(userId) => {\n    await axios.post(\"http://localhost:9000/users/check-duplication/userId\" , {\n        userId : userId,\n    })\n    .then((response) => {\n        console.log(response);\n\n        if(response?.data?.isDuplicated == null || response.data.message == null) {\n            setIdError(\"잘못된 요청입니다.\");\n            return;\n        }\n\n        setIsIdAvailable(!response.data.isDuplicated);\n        setIdMessage(response.data.message);\n\n    })\n    .catch(function(error) {\n        console.log(error);\n        setIdError(\"요청 처리 중 오류가 발생했습니다. 다시 시도해주세요.\");\n\n    })\n  }\n\n  const DisplayMessage = ({ idError, idMessage }) => { // message or error 출력\n    if (idError) {\n      return <Style.ErrorMessage>{idError}</Style.ErrorMessage>;\n    } else if (idMessage) {\n      return <Style.Message>{idMessage}</Style.Message>;\n    }\n      return null;\n    };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const id = idInputRef.current.value;\n    setId(id);\n    console.log(id);\n\n    // history.push()를 사용하여 원하는 URL로 라우팅합니다.\n    navigate('/signUp/password');\n\n  };\n\n  return (\n    <>\n    <Style.Instruction>아이디를 입력해주세요.</Style.Instruction>\n\n    <Style.InputField\n        ref = {idInputRef}\n        onChange={onChangeIdHandler}\n        type=\"text\"\n        id='id'\n        name='id'\n        value={id}\n        placeholder='아이디 입력'\n        theme='underLine'\n        maxLength={15}\n        />\n\n    <DisplayMessage idError={idError} idMessage={idMessage} />\n\n\n    <Style.StepInfo>1 of 3</Style.StepInfo>\n\n    <Style.ProgressSection>\n        <Style.ProgressBar />\n    </Style.ProgressSection>\n\n    <form onSubmit = {onFormSubmit}>\n      <Style.NextButton disabled={isIdAvailable} type = \"submit\"> 다음 </Style.NextButton>\n    </form>\n\n    <Style.FooterIndicator />\n\n    </>\n  );\n}\n\nexport default IdInputForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}