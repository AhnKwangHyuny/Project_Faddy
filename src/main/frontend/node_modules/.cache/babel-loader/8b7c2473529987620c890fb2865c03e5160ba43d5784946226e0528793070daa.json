{"ast":null,"code":"var _jsxFileName = \"/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreatePasswordPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordInputForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [password, setPassword] = useContext(SignUpContext);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n\n  const passwordRef = useRef();\n  const onFormSubmit = event => {\n    _s();\n    event.preventDefault();\n    const password = passwordRef.current.value;\n    setPassword(password);\n    console.log(password);\n    let history = useHistory();\n\n    // history.push()를 사용하여 원하는 URL로 라우팅합니다.\n    history.push(`/signUp/nickname`);\n  };\n  _s(onFormSubmit, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n  const onChangePasswordHandler = event => {\n    let password = event.target.value;\n    if (password == \"\") {\n      return;\n    }\n\n    // password 유효성 검사\n    let isValid = sValidPassword(password);\n    if (isValid) {\n      setMessage(\"사용가능한 비밀번호 입니다.\");\n    } else {\n      setError(\"비밀번호는 숫자,영문자, 특수문자롤 1개씩 포함한 8자리 이상이어야 합니다.\");\n    }\n    setIsIdAvailable(isValid);\n  };\n  const isValidPassword = password => {\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Style.Instruction, {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Style.InputField, {\n      ref: passwordRef,\n      onChange: onChangePasswordHandler,\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: password,\n      theme: \"underLine\",\n      placeholder: \"\\uC22B\\uC790,\\uC601\\uBB38\\uC790,\\uD2B9\\uC218\\uBB38\\uC790\\uB97C 1\\uAC1C \\uC774\\uC0C1 \\uC0AC\\uC6A9\\uD55C 8\\uC790\\uB9AC \\uC774\\uC0C1\\uC758 \\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Style.StepInfo, {\n      children: \"2 of 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Style.ProgressSection, {\n      children: /*#__PURE__*/_jsxDEV(Style.ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Style.NextButton, {\n      disabled: isIdAvailable,\n      type: \"submit\",\n      children: \" \\uB2E4\\uC74C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Style.FooterIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s2(PasswordInputForm, \"WMr604gJ2ULnFKcpl2kVaJtLW2U=\");\n_c = PasswordInputForm;\nexport default PasswordInputForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordInputForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","Style","Link","SignUpContext","axios","useHistory","jsxDEV","_jsxDEV","PasswordInputForm","_s2","_s","$RefreshSig$","password","setPassword","error","setError","message","setMessage","isIdAvailable","setIsIdAvailable","passwordRef","onFormSubmit","event","preventDefault","current","value","console","log","history","push","onChangePasswordHandler","target","isValid","sValidPassword","isValidPassword","passwordRegex","test","onSubmit","children","Instruction","fileName","_jsxFileName","lineNumber","columnNumber","InputField","ref","onChange","type","id","name","theme","placeholder","StepInfo","ProgressSection","ProgressBar","NextButton","disabled","FooterIndicator","_c","$RefreshReg$"],"sources":["/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreatePasswordPage.js"],"sourcesContent":["import React, { useState , useEffect , useContext , useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction PasswordInputForm() {\n\n    const [password , setPassword ] = useContext(SignUpContext);\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n    const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n\n    const passwordRef = useRef();\n\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const password = passwordRef.current.value;\n        setPassword(password);\n        \n        console.log(password);\n\n        let history = useHistory();\n\n        // history.push()를 사용하여 원하는 URL로 라우팅합니다.\n        history.push(`/signUp/nickname`);\n      };\n\n    const onChangePasswordHandler = (event) => {\n        let password = event.target.value;\n\n        if(password == \"\") {\n            return;\n        }\n\n        // password 유효성 검사\n        let isValid = sValidPassword(password);\n        if(isValid){\n            setMessage(\"사용가능한 비밀번호 입니다.\");\n        } else {\n            setError(\"비밀번호는 숫자,영문자, 특수문자롤 1개씩 포함한 8자리 이상이어야 합니다.\");\n        }\n\n        setIsIdAvailable(isValid);\n\n\n    }\n\n    const isValidPassword = (password) => {\n        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/;\n\n        return passwordRegex.test(password);\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <Style.Instruction>비밀번호를 입력해주세요.</Style.Instruction>\n\n            <Style.InputField\n                ref = {passwordRef}\n                onChange={onChangePasswordHandler}\n                type=\"password\"\n                id='password'\n                name='password'\n                value={password}\n                theme='underLine'\n                placeholder=\"숫자,영문자,특수문자를 1개 이상 사용한 8자리 이상의 비밀번호\"\n            />\n\n\n            <Style.StepInfo>2 of 3</Style.StepInfo>\n\n            <Style.ProgressSection>\n                <Style.ProgressBar />\n            </Style.ProgressSection>\n\n            <Style.NextButton disabled={isIdAvailable} type = \"submit\"> 다음 </Style.NextButton>\n\n\n            <Style.FooterIndicator />\n        </form>\n    );\n}\n\nexport default PasswordInputForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}