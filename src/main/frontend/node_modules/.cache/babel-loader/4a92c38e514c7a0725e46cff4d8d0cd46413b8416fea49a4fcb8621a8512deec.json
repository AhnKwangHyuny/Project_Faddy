{"ast":null,"code":"var _jsxFileName = \"/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport IdInputForm from './IdInputPage';\nimport PasswordInputForm from './PasswordInputPage';\nimport NicknameInputForm from './NicknameInputPage';\nimport { BrowserRouter as Router, Route, useNavigate, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate('id');\n  }, []);\n  const [password, setPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [nicknameError, setNicknameError] = useState('');\n  const [confirmError, setConfirmError] = useState('');\n  const [isNicknameDuplicated, setIsNicknameDuplicated] = useState(false); // 닉네임 중복 검사를 했는지 안했는지\n  const [isNicknameAvailable, setIsNicknameAvailable] = useState(false); // 닉네임 사용 가능한지 아닌지\n\n  /*\n  : 사용자가 아이디와 비밀번호 및 닉네임을 입력할 때 마다 해당 값의 변화를 감지하고 업데이트 함\n  */\n\n  // 닉네임\n  const onChangeIdHandler = e => {\n    const nicknameValue = e.target.value;\n    setId(nicknameValue);\n\n    // nickname 유효성 검사\n    nicknameCheckHandler(nicknameValue);\n  };\n  const onChangePasswordHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'password') {\n      setPassword(value);\n      passwordCheckHandler(value, confirm);\n    } else {\n      setConfirm(value);\n      passwordCheckHandler(password, value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"id\",\n      element: /*#__PURE__*/_jsxDEV(IdInputForm, {\n        onChange: onChangeIdHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"password\",\n      element: /*#__PURE__*/_jsxDEV(PasswordInputForm, {\n        onSubmit: handlePasswordSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"nickname\",\n      element: /*#__PURE__*/_jsxDEV(NicknameInputForm, {\n        onSubmit: handleNicknameSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"9/rfuQ8WAx+qBus7Qi0gNtzRsCk=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","IdInputForm","PasswordInputForm","NicknameInputForm","BrowserRouter","Router","Route","useNavigate","Routes","jsxDEV","_jsxDEV","Signup","_s","navigate","password","setPassword","nickname","setNickname","confirm","setConfirm","passwordError","setPasswordError","nicknameError","setNicknameError","confirmError","setConfirmError","isNicknameDuplicated","setIsNicknameDuplicated","isNicknameAvailable","setIsNicknameAvailable","onChangeIdHandler","e","nicknameValue","target","value","setId","nicknameCheckHandler","onChangePasswordHandler","name","passwordCheckHandler","children","path","element","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handlePasswordSubmit","handleNicknameSubmit","_c","$RefreshReg$"],"sources":["/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/Signup.js"],"sourcesContent":["import React, { useState , useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport IdInputForm from './IdInputPage';\nimport PasswordInputForm from './PasswordInputPage';\nimport NicknameInputForm from './NicknameInputPage';\n\nimport { BrowserRouter as Router, Route, useNavigate, Routes } from 'react-router-dom';\n\nfunction Signup() {\n  const navigate = useNavigate();\n\n    useEffect(() => {\n      navigate('id');\n    }, []);\n\n  const [password, setPassword] = useState('');\n  const [nickname , setNickname] = useState('');\n  const [confirm, setConfirm] = useState('');\n\n  const [passwordError, setPasswordError] = useState('');\n  const [nicknameError , setNicknameError] = useState('');\n  const [confirmError, setConfirmError] = useState('');\n\n\n  const [isNicknameDuplicated, setIsNicknameDuplicated] = useState(false); // 닉네임 중복 검사를 했는지 안했는지\n  const [isNicknameAvailable, setIsNicknameAvailable] = useState(false); // 닉네임 사용 가능한지 아닌지\n\n/*\n: 사용자가 아이디와 비밀번호 및 닉네임을 입력할 때 마다 해당 값의 변화를 감지하고 업데이트 함\n*/\n\n\n\n// 닉네임\nconst onChangeIdHandler = (e) => {\n  const nicknameValue = e.target.value;\n  setId(nicknameValue);\n\n  // nickname 유효성 검사\n  nicknameCheckHandler(nicknameValue);\n}\n\nconst onChangePasswordHandler = (e) => {\n  const { name, value } = e.target;\n  if (name === 'password') {\n    setPassword(value);\n    passwordCheckHandler(value, confirm);\n  } else {\n    setConfirm(value);\n    passwordCheckHandler(password, value);\n  }\n}\n\n\n  return (\n    <Routes>\n      <Route path=\"id\" element={<IdInputForm onChange = {onChangeIdHandler} />} />\n      <Route path=\"password\" element={<PasswordInputForm onSubmit={handlePasswordSubmit} />} />\n      <Route path=\"nickname\" element={<NicknameInputForm onSubmit={handleNicknameSubmit} />} />\n    </Routes>\n  );\n}\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}