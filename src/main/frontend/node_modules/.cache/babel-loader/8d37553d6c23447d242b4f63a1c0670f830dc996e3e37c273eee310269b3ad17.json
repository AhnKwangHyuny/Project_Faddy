{"ast":null,"code":"var _jsxFileName = \"/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreateIdPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IdInputForm() {\n  _s();\n  const [id, setId] = useContext(SignUpContext);\n  const [idError, setIdError] = useState('');\n  const [idMessage, setIdMessage] = useState('');\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false); // 아이디 중복 검사를 했는지 안했는지\n  const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n  const idInputRef = useRef();\n  const onChangeIdHandler = e => {\n    const idValue = e.target.value;\n    setId(idValue);\n\n    // id 유효성 검사\n    idCheckHandler(idValue);\n  };\n  const idCheckHandler = async id => {\n    const idRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{5,15}$/;\n    if (id === '') {\n      setIdError('아이디를 입력해주세요.');\n      setIsIdAvailable(false);\n      return false;\n    } else if (!idRegex.test(id)) {\n      setIdError('아이디는 5~15자의 영소문자, 숫자만 입력 가능합니다.');\n      setIsIdAvailable(false);\n      return false;\n    }\n    try {\n      idDuplicationCheck(id); // 아이디 중복 검사\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.data && error.response.data.message) {\n        setIdError(error.response.data.message);\n      } else {\n        setIdError('서버 오류입니다. 관리자에게 문의하세요.');\n      }\n      return false;\n    }\n  };\n  const idDuplicationCheck = async userId => {\n    await axios.post(\"http://localhost:9000/users/check-duplication\", {\n      userId: userId\n    }).then(response => {\n      var _response$data;\n      console.log(response);\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.isDuplicated) == null || response.data.message == null) {\n        setIdError(\"잘못된 요청입니다.\");\n      }\n      setIsIdAvailable(!response.data.isDuplicated);\n      setIdMessage(response.data.message);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const DisplayMessage = ({\n    idError,\n    idMessage\n  }) => {\n    // message or error 출력\n    if (idError) {\n      return /*#__PURE__*/_jsxDEV(Style.ErrorMessage, {\n        children: idError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    } else if (idMessage) {\n      return /*#__PURE__*/_jsxDEV(Style.Message, {\n        children: idMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const id = idInputRef.current.value;\n    setId(id);\n    console.log(id);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Style.Instruction, {\n      children: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.InputField, {\n      ref: idInputRef,\n      onChange: onChangeIdHandler,\n      type: \"text\",\n      id: \"id\",\n      name: \"id\",\n      value: id,\n      placeholder: \"\\uC544\\uC774\\uB514 \\uC785\\uB825\",\n      theme: \"underLine\",\n      maxLength: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DisplayMessage, {\n      idError: idError,\n      idMessage: idMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.StepInfo, {\n      children: \"1 of 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.ProgressSection, {\n      children: /*#__PURE__*/_jsxDEV(Style.ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(Style.NextButton, {\n        disabled: isIdAvailable,\n        children: \" \\uB2E4\\uC74C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Style.FooterIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(IdInputForm, \"luTuhd7DjLmxIQczDKIgBlbCLnw=\");\n_c = IdInputForm;\nexport default IdInputForm;\nvar _c;\n$RefreshReg$(_c, \"IdInputForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","Style","Link","SignUpContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","IdInputForm","_s","id","setId","idError","setIdError","idMessage","setIdMessage","isIdDuplicated","setIsIdDuplicated","isIdAvailable","setIsIdAvailable","idInputRef","onChangeIdHandler","e","idValue","target","value","idCheckHandler","idRegex","test","idDuplicationCheck","error","console","response","data","message","userId","post","then","_response$data","log","isDuplicated","catch","DisplayMessage","ErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","Message","onFormSubmit","event","preventDefault","current","Instruction","InputField","ref","onChange","type","name","placeholder","theme","maxLength","StepInfo","ProgressSection","ProgressBar","onSubmit","NextButton","disabled","FooterIndicator","_c","$RefreshReg$"],"sources":["/Users/ahnkwanghyun/project/faddy/src/main/frontend/src/SignUp/CreateIdPage.js"],"sourcesContent":["import React, { useState , useEffect , useContext , useRef } from 'react';\nimport * as Style from \".././Common/SignUpStyle\";\nimport { Link } from 'react-router-dom';\nimport SignUpContext from \"./SignUpContext\";\nimport axios from 'axios';\n\nfunction IdInputForm() {\n  const [id, setId] = useContext(SignUpContext);\n  const [idError, setIdError] = useState('');\n  const [idMessage, setIdMessage] = useState('');\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false); // 아이디 중복 검사를 했는지 안했는지\n  const [isIdAvailable, setIsIdAvailable] = useState(false); // 아이디 사용 가능한지 아닌지\n  const idInputRef = useRef();\n\n  const onChangeIdHandler = (e) => {\n    const idValue = e.target.value;\n    setId(idValue);\n\n    // id 유효성 검사\n    idCheckHandler(idValue);\n  }\n\n  const idCheckHandler = async (id) => {\n    const idRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{5,15}$/;\n\n    if (id === '') {\n      setIdError('아이디를 입력해주세요.');\n      setIsIdAvailable(false);\n      return false;\n\n    } else if (!idRegex.test(id)) {\n      setIdError('아이디는 5~15자의 영소문자, 숫자만 입력 가능합니다.');\n      setIsIdAvailable(false);\n      return false;\n    }\n\n    try {\n      idDuplicationCheck(id); // 아이디 중복 검사\n\n    } catch (error) {\n     console.error(error);\n       if (error.response && error.response.data && error.response.data.message) {\n         setIdError(error.response.data.message);\n       } else {\n         setIdError('서버 오류입니다. 관리자에게 문의하세요.');\n       }\n       return false;\n    }\n  }\n\n  const idDuplicationCheck = async(userId) => {\n    await axios.post(\"http://localhost:9000/users/check-duplication\" , {\n        userId : userId,\n    })\n    .then((response) => {\n        console.log(response);\n\n        if(response?.data?.isDuplicated == null || response.data.message == null) {\n            setIdError(\"잘못된 요청입니다.\");\n        }\n\n        setIsIdAvailable(!response.data.isDuplicated);\n        setIdMessage(response.data.message);\n\n    })\n    .catch(function(error) {\n        console.log(error);\n    })\n  }\n\n  const DisplayMessage = ({ idError, idMessage }) => { // message or error 출력\n    if (idError) {\n      return <Style.ErrorMessage>{idError}</Style.ErrorMessage>;\n    } else if (idMessage) {\n      return <Style.Message>{idMessage}</Style.Message>;\n    }\n      return null;\n    };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const id = idInputRef.current.value;\n    setId(id);\n    console.log(id);\n  };\n\n  return (\n    <>\n    <Style.Instruction>아이디를 입력해주세요.</Style.Instruction>\n\n    <Style.InputField\n        ref = {idInputRef}\n        onChange={onChangeIdHandler}\n        type=\"text\"\n        id='id'\n        name='id'\n        value={id}\n        placeholder='아이디 입력'\n        theme='underLine'\n        maxLength={15}\n        />\n\n    <DisplayMessage idError={idError} idMessage={idMessage} />\n\n\n    <Style.StepInfo>1 of 3</Style.StepInfo>\n\n    <Style.ProgressSection>\n        <Style.ProgressBar />\n    </Style.ProgressSection>\n\n    <form onSubmit = {onFormSubmit}>\n      <Style.NextButton disabled={isIdAvailable}> 다음 </Style.NextButton>\n    </form>\n\n    <Style.FooterIndicator />\n\n    </>\n  );\n}\n\nexport default IdInputForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}